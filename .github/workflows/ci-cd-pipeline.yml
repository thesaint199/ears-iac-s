name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run linter
        run: echo "Placeholder Running code linting checks. All checks passed."

  security-scan:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Security Scan
        run: echo "Placeholder Running security scan. No vulnerabilities found."

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Vulnerability Scan
        run: echo "Placeholder Running vulnerability scan. No issues found."

  build:
    runs-on: ubuntu-latest
    needs: vulnerability-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        working-directory: cdk
        run: npm install

      - name: Build the application
        working-directory: cdk
        run: npm run build

      - name: Run placeholder tests
        run: echo "Running placeholder tests. All tests passed."

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t my-app .

      - name: Push Docker image to ECR
        if: success()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 444515292128.dkr.ecr.us-east-1.amazonaws.com
          docker tag my-app:latest 444515292128.dkr.ecr.us-east-1.amazonaws.com/prod-app-repository:latest
          docker push 444515292128.dkr.ecr.us-east-1.amazonaws.com/prod-app-repository:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster ProdAppStack-ProdEcsClusterFFF7E144-cFNSB7JEtYyJ \
            --service ProdAppStack-ProdAppService192573C0-WtMchgtWRDtH \
            --force-new-deployment
